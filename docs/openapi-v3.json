{
  "openapi": "3.0.0",
  "info": {
    "description": "API para gerenciamento de dados de cidadãos do Rio de Janeiro, incluindo autodeclaração de informações e verificação de contato.",
    "title": "API RMI",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Suporte RMI",
      "url": "http://www.rio.rj.gov.br",
      "email": "suporte@rio.rj.gov.br"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "paths": {
    "/admin/beta/groups": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Lista todos os grupos beta com paginação (apenas administradores)",
        "tags": [
          "Beta Groups"
        ],
        "summary": "Listar grupos beta",
        "parameters": [
          {
            "description": "Página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Itens por página (padrão: 10)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de grupos beta obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaGroupListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Cria um novo grupo beta para o chatbot (apenas administradores)",
        "tags": [
          "Beta Groups"
        ],
        "summary": "Criar grupo beta",
        "requestBody": {
          "$ref": "#/components/requestBodies/models.BetaGroupRequest"
        },
        "responses": {
          "201": {
            "description": "Grupo beta criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou nome de grupo inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - nome de grupo já existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/groups/{group_id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Obtém um grupo beta por ID (apenas administradores)",
        "tags": [
          "Beta Groups"
        ],
        "summary": "Obter grupo beta",
        "parameters": [
          {
            "description": "ID do grupo",
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo beta obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID do grupo é obrigatório ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza um grupo beta existente (apenas administradores)",
        "tags": [
          "Beta Groups"
        ],
        "summary": "Atualizar grupo beta",
        "parameters": [
          {
            "description": "ID do grupo",
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/models.BetaGroupRequest"
        },
        "responses": {
          "200": {
            "description": "Grupo beta atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID do grupo ou dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - nome de grupo já existe",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Exclui um grupo beta e remove todas as associações de telefones (apenas administradores)",
        "tags": [
          "Beta Groups"
        ],
        "summary": "Excluir grupo beta",
        "parameters": [
          {
            "description": "ID do grupo",
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Grupo excluído com sucesso"
          },
          "400": {
            "description": "ID do grupo é obrigatório ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/whitelist": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Lista telefones na whitelist beta com paginação (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Listar telefones na whitelist",
        "parameters": [
          {
            "description": "Página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Itens por página (padrão: 10)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filtrar por ID do grupo",
            "name": "group_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de telefones na whitelist obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaWhitelistListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/whitelist/bulk-add": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Adiciona múltiplos números de telefone a um grupo beta (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Adicionar múltiplos telefones à whitelist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BetaWhitelistBulkRequest"
              }
            }
          },
          "description": "Dados da operação em lote",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefones adicionados à whitelist em lote com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/models.BetaWhitelistResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou lista de telefones vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/whitelist/bulk-move": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Move múltiplos números de telefone de um grupo beta para outro (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Mover múltiplos telefones entre grupos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BetaWhitelistMoveRequest"
              }
            }
          },
          "description": "Dados da operação de movimentação",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefones movidos entre grupos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou IDs de grupos iguais",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta de origem ou destino não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/whitelist/bulk-remove": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Remove múltiplos números de telefone da whitelist beta (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Remover múltiplos telefones da whitelist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BetaWhitelistBulkRemoveRequest"
              }
            }
          },
          "description": "Dados da operação em lote",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefones removidos da whitelist em lote com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou lista de telefones vazia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/beta/whitelist/{phone_number}": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Adiciona um número de telefone a um grupo beta (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Adicionar telefone à whitelist",
        "parameters": [
          {
            "description": "Número de telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BetaWhitelistRequest"
              }
            }
          },
          "description": "Dados da whitelist",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefone adicionado à whitelist com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaWhitelistResponse"
                }
              }
            }
          },
          "400": {
            "description": "Número de telefone ou dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Grupo beta não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - telefone já está na whitelist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Remove um número de telefone da whitelist beta (apenas administradores)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Remover telefone da whitelist",
        "parameters": [
          {
            "description": "Número de telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telefone removido da whitelist com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaWhitelistResponse"
                }
              }
            }
          },
          "400": {
            "description": "Número de telefone é obrigatório ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Telefone não encontrado na whitelist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cache/read": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Permite aos administradores ler qualquer chave do cache Redis para debug e monitoramento",
        "tags": [
          "admin"
        ],
        "summary": "Ler chave arbitrária do cache Redis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/handlers.CacheReadRequest"
              }
            }
          },
          "description": "Chave do cache para ler",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dados da chave do cache",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.CacheReadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/phone/quarantine/stats": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Obtém estatísticas sobre telefones em quarentena (apenas administradores)",
        "tags": [
          "phone"
        ],
        "summary": "Obter estatísticas de quarentena",
        "responses": {
          "200": {
            "description": "Estatísticas de quarentena obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.QuarantineStats"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores podem obter estatísticas de quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/phone/quarantined": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Lista todos os telefones em quarentena com paginação (apenas administradores)",
        "tags": [
          "phone"
        ],
        "summary": "Listar telefones em quarentena",
        "parameters": [
          {
            "description": "Página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Itens por página (padrão: 10)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de telefones em quarentena obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.QuarantinedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores podem listar telefones em quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/avatars": {
      "get": {
        "description": "Obtém lista paginada de avatares de foto de perfil disponíveis",
        "tags": [
          "avatars"
        ],
        "summary": "Listar avatares disponíveis",
        "parameters": [
          {
            "description": "Número da página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Itens por página (padrão: 20, máximo: 100)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de avatares obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.AvatarsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Cria um novo avatar de foto de perfil (somente administradores)",
        "tags": [
          "avatars"
        ],
        "summary": "Criar novo avatar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.AvatarRequest"
              }
            }
          },
          "description": "Dados do avatar",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Avatar criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados de avatar inválidos ou formato incorreto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/avatars/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Exclui um avatar de foto de perfil (exclusão suave, somente administradores)",
        "tags": [
          "avatars"
        ],
        "summary": "Excluir avatar",
        "parameters": [
          {
            "description": "ID do avatar",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Avatar excluído com sucesso"
          },
          "400": {
            "description": "ID do avatar é obrigatório ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Avatar não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/ethnicity/options": {
      "get": {
        "description": "Retorna a lista de opções válidas de etnia para autodeclaração. Esta lista é usada para validar as atualizações de etnia autodeclarada.",
        "tags": [
          "citizen"
        ],
        "summary": "Listar opções de etnia",
        "responses": {
          "200": {
            "description": "Lista de opções de etnia válidas obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/citizen/{cpf}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera os dados do cidadão por CPF, incluindo informações básicas e dados autodeclarados.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter dados do cidadão",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do cidadão obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Citizen"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/address": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza ou cria o endereço autodeclarado de um cidadão por CPF. Apenas o campo de endereço é atualizado.",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar endereço autodeclarado",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SelfDeclaredAddressInput"
              }
            }
          },
          "description": "Endereço autodeclarado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Endereço autodeclarado atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou dados de endereço incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - endereço não alterado (dados idênticos aos atuais)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - informações de endereço inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/avatar": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Obtém o avatar de foto de perfil atual de um usuário",
        "tags": [
          "avatars",
          "citizen"
        ],
        "summary": "Obter avatar atual do usuário",
        "parameters": [
          {
            "description": "CPF do usuário",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar do usuário obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Define ou altera o avatar de foto de perfil de um usuário",
        "tags": [
          "avatars",
          "citizen"
        ],
        "summary": "Atualizar avatar do usuário",
        "parameters": [
          {
            "description": "CPF do usuário",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.UserAvatarRequest"
              }
            }
          },
          "description": "Seleção de avatar",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Avatar do usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou ID de avatar inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Usuário ou avatar não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - avatar inexistente ou inativo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/email": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza ou cria o email autodeclarado de um cidadão por CPF. Apenas o campo de email é atualizado.",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar email autodeclarado",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SelfDeclaredEmailInput"
              }
            }
          },
          "description": "Email autodeclarado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email autodeclarado atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou dados de email incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - email não alterado (email corresponde aos dados atuais)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - formato de email inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/ethnicity": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza ou cria a etnia autodeclarada de um cidadão por CPF. Apenas o campo de etnia é atualizado. O valor deve ser uma das opções válidas retornadas pelo endpoint /citizen/ethnicity/options.",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar etnia autodeclarada",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SelfDeclaredRacaInput"
              }
            }
          },
          "description": "Etnia autodeclarada",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Etnia atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou valor de etnia inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - valor de etnia não é válido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/exhibition-name": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza ou cria o nome de exibição autodeclarado de um cidadão por CPF. Apenas o campo de nome de exibição é atualizado. O nome de exibição é o nome que aparece na interface do usuário, permitindo ao cidadão controlar como seu nome é exibido no aplicativo.",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar nome de exibição autodeclarado",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SelfDeclaredNomeExibicaoInput"
              }
            }
          },
          "description": "Nome de exibição autodeclarado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Nome de exibição atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou valor de nome de exibição inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - nome de exibição muito longo ou vazio",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/firstlogin": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Verifica se este é o primeiro login do usuário",
        "tags": [
          "citizen"
        ],
        "summary": "Obter status do primeiro login",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status do primeiro login obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Define o status do primeiro login como falso para um usuário",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar status do primeiro login",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status do primeiro login atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/legal-entities": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera a lista paginada de entidades jurídicas (pessoas jurídicas) associadas ao CPF do cidadão. A busca é feita através do campo 'cpf_socio' no array 'socios' de cada entidade.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter entidades jurídicas associadas ao CPF",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          },
          {
            "description": "Número da página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Itens por página (padrão: 10, máximo: 100)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "description": "Filtro opcional por ID da natureza jurídica",
            "name": "natureza_juridica_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de entidades jurídicas obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PaginatedLegalEntities"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/maintenance-request": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera os chamados do 1746 de um cidadão por CPF com paginação. Cada documento representa um chamado individual.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter chamados do 1746 do cidadão",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          },
          {
            "description": "Número da página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Itens por página (padrão: 10, máximo: 100)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de chamados do 1746 obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PaginatedMaintenanceRequests"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/optin": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Verifica se o usuário optou por receber notificações",
        "tags": [
          "citizen"
        ],
        "summary": "Obter status de opt-in",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status do opt-in obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserConfigOptInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza o status de opt-in do usuário para notificações",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar status de opt-in",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.UserConfigOptInResponse"
              }
            }
          },
          "description": "Status de opt-in",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status do opt-in atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.UserConfigOptInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou dados de opt-in incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - valor de opt-in inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/pets": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera a lista paginada de pets associados ao CPF do cidadão.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter pets associados ao CPF",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          },
          {
            "description": "Número da página (padrão: 1)",
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Itens por página (padrão: 10, máximo: 100)",
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista paginada de pets obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PaginatedPets"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou parâmetros de paginação inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/pets/clinic": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera informações da clínica credenciada associada aos pets do cidadão.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter dados da clínica credenciada para pets do CPF",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados da clínica obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PetClinicResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/pets/stats": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera as estatísticas de quantidade de pets por tipo associadas ao CPF do cidadão.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter estatísticas de pets do CPF",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estatísticas obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PetStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/pets/{pet_id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera um pet específico associado ao CPF do cidadão pelo ID do pet.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter pet específico por ID",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          },
          {
            "description": "ID do pet",
            "name": "pet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.Pet"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou ID do pet inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Pet não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/phone": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Atualiza ou cria o telefone autodeclarado de um cidadão por CPF. Apenas o campo de telefone é atualizado (armazenado como pendente até verificado).",
        "tags": [
          "citizen"
        ],
        "summary": "Atualizar telefone autodeclarado",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.SelfDeclaredPhoneInput"
              }
            }
          },
          "description": "Telefone autodeclarado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefone autodeclarado submetido para validação com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou dados de telefone incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - telefone não alterado (telefone corresponde aos dados atuais verificados)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - formato de telefone inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/phone/validate": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Valida o código de verificação enviado para o número de telefone",
        "tags": [
          "citizen"
        ],
        "summary": "Validar verificação de telefone",
        "parameters": [
          {
            "description": "Número do CPF",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.PhoneVerificationValidateRequest"
              }
            }
          },
          "description": "Código de verificação e telefone",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Código de verificação validado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido ou dados de verificação incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Código de verificação não encontrado ou expirado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - código inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/citizen/{cpf}/wallet": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Recupera os dados da carteira do cidadão por CPF, incluindo informações de saúde e outros dados da carteira.",
        "tags": [
          "citizen"
        ],
        "summary": "Obter dados da carteira do cidadão",
        "parameters": [
          {
            "description": "CPF do cidadão (11 dígitos)",
            "name": "cpf",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 11,
              "maxLength": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados da carteira do cidadão obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.CitizenWallet"
                }
              }
            }
          },
          "400": {
            "description": "Formato de CPF inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cidadão não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/config/channels": {
      "get": {
        "description": "Obtém a lista de canais disponíveis para comunicação",
        "tags": [
          "config"
        ],
        "summary": "Obter canais disponíveis",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/config/opt-out-reasons": {
      "get": {
        "description": "Obtém a lista de motivos válidos para opt-out",
        "tags": [
          "config"
        ],
        "summary": "Obter motivos de opt-out",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "description": "Verifica a saúde da API e suas dependências (MongoDB e Redis). Retorna status detalhado para cada serviço.",
        "tags": [
          "health"
        ],
        "summary": "Verificação de saúde",
        "responses": {
          "200": {
            "description": "Todos os serviços estão saudáveis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.HealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Um ou mais serviços não estão saudáveis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/metrics": {
      "get": {
        "description": "Expõe métricas Prometheus para monitoramento do sistema",
        "tags": [
          "metrics"
        ],
        "summary": "Métricas Prometheus",
        "responses": {
          "200": {
            "description": "Métricas Prometheus obtidas com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/phone/{phone_number}/beta-status": {
      "get": {
        "description": "Verifica se um número de telefone está na whitelist beta (com cache)",
        "tags": [
          "Beta Whitelist"
        ],
        "summary": "Verificar status beta",
        "parameters": [
          {
            "description": "Número de telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status beta verificado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BetaStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Número de telefone é obrigatório ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/phone/{phone_number}/bind": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Vincula um número de telefone a um CPF sem definir opt-in",
        "tags": [
          "phone"
        ],
        "summary": "Vincular telefone a CPF",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.BindRequest"
              }
            }
          },
          "description": "Dados da vinculação",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefone vinculado ao CPF com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.BindResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou dados de vinculação incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - telefone já está vinculado a outro CPF",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - CPF ou telefone inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/citizen": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Obtém informações do cidadão associado a um número de telefone",
        "tags": [
          "phone"
        ],
        "summary": "Obter cidadão por telefone",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informações do cidadão obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PhoneCitizenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nenhum cidadão encontrado para este telefone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/opt-in": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Realiza opt-in para receber notificações do chatbot",
        "tags": [
          "phone"
        ],
        "summary": "Realizar opt-in",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.OptInRequest"
              }
            }
          },
          "description": "Dados do opt-in",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Opt-in realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.OptInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou dados de opt-in incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflito - telefone já possui opt-in ativo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - telefone em quarentena ou bloqueado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/opt-out": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Realiza opt-out para parar de receber notificações do chatbot",
        "tags": [
          "phone"
        ],
        "summary": "Realizar opt-out",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.OptOutRequest"
              }
            }
          },
          "description": "Dados do opt-out",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Opt-out realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.OptOutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou dados de opt-out incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Telefone não encontrado ou sem opt-in ativo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - opt-out já realizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/quarantine": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Coloca um número de telefone em quarentena (apenas administradores)",
        "tags": [
          "phone"
        ],
        "summary": "Colocar telefone em quarentena",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telefone colocado em quarentena com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.QuarantineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou parâmetros incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores podem colocar telefones em quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - telefone já em quarentena ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Libera um número de telefone da quarentena (apenas administradores)",
        "tags": [
          "phone"
        ],
        "summary": "Liberar telefone da quarentena",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Telefone liberado da quarentena com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.QuarantineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - somente administradores podem liberar telefones da quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Telefone não encontrado em quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - telefone não está em quarentena",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/reject-registration": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Rejeita um registro e bloqueia o mapeamento telefone-CPF",
        "tags": [
          "phone"
        ],
        "summary": "Rejeitar registro",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.RejectRegistrationRequest"
              }
            }
          },
          "description": "Dados da rejeição",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Registro rejeitado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.RejectRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou dados de rejeição incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - registro não pode ser rejeitado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/phone/{phone_number}/status": {
      "get": {
        "description": "Obtém o status de um número de telefone (quarentena, CPF vinculado, opt-in/opt-out, etc.)",
        "tags": [
          "phone"
        ],
        "summary": "Obter status do telefone",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status do telefone obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.PhoneStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Telefone não encontrado no sistema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/phone/{phone_number}/validate-registration": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Valida um registro de usuário contra dados base do governo",
        "tags": [
          "phone"
        ],
        "summary": "Validar registro",
        "parameters": [
          {
            "description": "Número do telefone",
            "name": "phone_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models.ValidateRegistrationRequest"
              }
            }
          },
          "description": "Dados do registro",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Registro validado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.ValidateRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Formato de telefone inválido ou dados de registro incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token de autenticação não fornecido ou inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Acesso negado - permissões insuficientes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Dados não processáveis - informações não conferem com a base",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/validate/email": {
      "post": {
        "description": "Valida formato e estrutura de endereços de email, retornando informações detalhadas sobre o endereço quando válido.",
        "tags": [
          "validation"
        ],
        "summary": "Valida endereço de email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/handlers.EmailValidationRequest"
              }
            }
          },
          "description": "Email a ser validado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email validado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.EmailValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Campo email é obrigatório ou formato inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/validate/phone": {
      "post": {
        "description": "Valida DDI, DDD e número para qualquer telefone internacional.",
        "tags": [
          "validation"
        ],
        "summary": "Valida número de telefone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/handlers.PhoneValidationRequest"
              }
            }
          },
          "description": "Telefone a ser validado",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Telefone validado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.PhoneValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Campo telefone é obrigatório ou formato inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Muitas requisições - limite de taxa excedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/handlers.ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Operações relacionadas a cidadãos, incluindo consulta e atualização de dados autodeclarados",
      "name": "citizen"
    },
    {
      "description": "Operações de verificação de saúde da API",
      "name": "health"
    }
  ],
  "servers": [
    {
      "url": "https://services.pref.rio/rmi/v1",
      "description": "Production"
    },
    {
      "url": "https://services.staging.app.dados.rio/rmi/v1",
      "description": "Staging"
    }
  ],
  "components": {
    "requestBodies": {
      "models.BetaGroupRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/models.BetaGroupRequest"
            }
          }
        },
        "description": "Dados do grupo",
        "required": true
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "handlers.CacheReadRequest": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string",
            "example": "citizen:12345678901"
          }
        }
      },
      "handlers.CacheReadResponse": {
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "ttl_seconds": {
            "type": "integer"
          },
          "value": {}
        }
      },
      "handlers.EmailValidationRequest": {
        "description": "Estrutura de entrada contendo o endereço de email a ser validado.",
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "description": "Endereço de email a ser validado.\nexample: \"usuario@exemplo.com\"",
            "type": "string"
          }
        }
      },
      "handlers.EmailValidationResponse": {
        "description": "Resultado da validação, contendo informações sobre o endereço de email quando válido.",
        "type": "object",
        "properties": {
          "domain": {
            "description": "Domínio do email (após o @)",
            "type": "string"
          },
          "local_part": {
            "description": "Parte local do email (antes do @)",
            "type": "string"
          },
          "message": {
            "description": "Mensagem de retorno.",
            "type": "string"
          },
          "normalized": {
            "description": "Email normalizado (lowercase)",
            "type": "string"
          },
          "valid": {
            "description": "Indica se o email é válido.",
            "type": "boolean"
          },
          "validation_type": {
            "description": "Tipo de validação aplicada",
            "type": "string"
          }
        }
      },
      "handlers.ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "handlers.HealthResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/handlers.ServiceHealth"
            }
          },
          "status": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "handlers.PhoneValidationRequest": {
        "description": "Estrutura de entrada contendo o número de telefone a ser validado.",
        "type": "object",
        "required": [
          "phone"
        ],
        "properties": {
          "phone": {
            "description": "Número de telefone em formato internacional ou nacional.\nexample: \"+55 11 99988-7766\"",
            "type": "string"
          }
        }
      },
      "handlers.PhoneValidationResponse": {
        "description": "Resultado da validação, contendo a decomposição (DDI, DDD, número) quando válida.",
        "type": "object",
        "properties": {
          "ddd": {
            "description": "DDD (código de área)",
            "type": "string"
          },
          "ddi": {
            "description": "DDI (código do país)",
            "type": "string"
          },
          "e164": {
            "description": "Representação E.164 do número",
            "type": "string"
          },
          "message": {
            "description": "Mensagem de retorno.",
            "type": "string"
          },
          "numero": {
            "description": "Número do assinante",
            "type": "string"
          },
          "region": {
            "description": "Região ISO 3166-1 alpha-2",
            "type": "string"
          },
          "valid": {
            "description": "Indica se o número é válido.",
            "type": "boolean"
          }
        }
      },
      "handlers.ServiceHealth": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "handlers.SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "models.Accountant": {
        "type": "object",
        "properties": {
          "pf": {
            "$ref": "#/components/schemas/models.AccountantIndividual"
          },
          "pj": {
            "$ref": "#/components/schemas/models.AccountantCorporate"
          }
        }
      },
      "models.AccountantCorporate": {
        "type": "object",
        "properties": {
          "classificacao_crc": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sequencial_crc": {
            "type": "string"
          },
          "tipo_crc": {
            "type": "string"
          }
        }
      },
      "models.AccountantIndividual": {
        "type": "object",
        "properties": {
          "classificacao_crc": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sequencial_crc": {
            "type": "string"
          },
          "tipo_crc": {
            "type": "string"
          }
        }
      },
      "models.AccreditedClinic": {
        "type": "object",
        "properties": {
          "celular": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "endereco": {
            "$ref": "#/components/schemas/models.ClinicAddress"
          },
          "nome": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          }
        }
      },
      "models.Aluno": {
        "type": "object",
        "properties": {
          "conceito": {
            "type": "string"
          },
          "frequencia": {
            "type": "number"
          },
          "indicador": {
            "type": "boolean"
          }
        }
      },
      "models.AssistenciaSocial": {
        "type": "object",
        "properties": {
          "cadunico": {
            "$ref": "#/components/schemas/models.CadUnico"
          },
          "cras": {
            "$ref": "#/components/schemas/models.CRAS"
          }
        }
      },
      "models.AvatarRequest": {
        "type": "object",
        "required": [
          "name",
          "url"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "url": {
            "type": "string"
          }
        }
      },
      "models.AvatarResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "models.AvatarsListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.AvatarResponse"
            }
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          }
        }
      },
      "models.BetaGroupListResponse": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.BetaGroupResponse"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/models.PaginationInfo"
          },
          "total_groups": {
            "type": "integer"
          }
        }
      },
      "models.BetaGroupRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "models.BetaGroupResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "models.BetaStatusResponse": {
        "type": "object",
        "properties": {
          "beta_whitelisted": {
            "type": "boolean"
          },
          "group_id": {
            "type": "string"
          },
          "group_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "models.BetaWhitelistBulkRemoveRequest": {
        "type": "object",
        "required": [
          "phone_numbers"
        ],
        "properties": {
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "models.BetaWhitelistBulkRequest": {
        "type": "object",
        "required": [
          "group_id",
          "phone_numbers"
        ],
        "properties": {
          "group_id": {
            "type": "string"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "models.BetaWhitelistListResponse": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/models.PaginationInfo"
          },
          "total_count": {
            "type": "integer"
          },
          "whitelisted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.BetaWhitelistResponse"
            }
          }
        }
      },
      "models.BetaWhitelistMoveRequest": {
        "type": "object",
        "required": [
          "from_group_id",
          "phone_numbers",
          "to_group_id"
        ],
        "properties": {
          "from_group_id": {
            "type": "string"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "to_group_id": {
            "type": "string"
          }
        }
      },
      "models.BetaWhitelistRequest": {
        "type": "object",
        "required": [
          "group_id"
        ],
        "properties": {
          "group_id": {
            "type": "string"
          }
        }
      },
      "models.BetaWhitelistResponse": {
        "type": "object",
        "properties": {
          "added_at": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "group_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "models.BindRequest": {
        "type": "object",
        "required": [
          "channel",
          "cpf"
        ],
        "properties": {
          "channel": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          }
        }
      },
      "models.BindResponse": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "opt_in": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "models.CRAS": {
        "type": "object",
        "properties": {
          "endereco": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          }
        }
      },
      "models.CadUnico": {
        "type": "object",
        "properties": {
          "data_cadastro": {
            "type": "string"
          },
          "data_limite_cadastro_atual": {
            "type": "string"
          },
          "data_ultima_atualizacao": {
            "type": "string"
          },
          "indicador": {
            "type": "boolean"
          },
          "status_cadastral": {
            "type": "string"
          }
        }
      },
      "models.Citizen": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "assistencia_social": {
            "$ref": "#/components/schemas/models.AssistenciaSocial"
          },
          "cpf": {
            "type": "string"
          },
          "documentos": {
            "description": "Wallet and internal fields",
            "allOf": [
              {
                "$ref": "#/components/schemas/models.Documentos"
              }
            ]
          },
          "educacao": {
            "$ref": "#/components/schemas/models.Educacao"
          },
          "email": {
            "$ref": "#/components/schemas/models.Email"
          },
          "endereco": {
            "$ref": "#/components/schemas/models.Endereco"
          },
          "mae": {
            "$ref": "#/components/schemas/models.Mae"
          },
          "menor_idade": {
            "type": "boolean"
          },
          "nascimento": {
            "$ref": "#/components/schemas/models.Nascimento"
          },
          "nome": {
            "type": "string"
          },
          "nome_exibicao": {
            "description": "Self-declared, not stored in base collection",
            "type": "string"
          },
          "nome_social": {
            "type": "string"
          },
          "obito": {
            "$ref": "#/components/schemas/models.Obito"
          },
          "raca": {
            "type": "string"
          },
          "saude": {
            "$ref": "#/components/schemas/models.Saude"
          },
          "sexo": {
            "type": "string"
          },
          "telefone": {
            "$ref": "#/components/schemas/models.Telefone"
          }
        }
      },
      "models.CitizenWallet": {
        "type": "object",
        "properties": {
          "assistencia_social": {
            "$ref": "#/components/schemas/models.AssistenciaSocial"
          },
          "cpf": {
            "type": "string"
          },
          "documentos": {
            "$ref": "#/components/schemas/models.Documentos"
          },
          "educacao": {
            "$ref": "#/components/schemas/models.Educacao"
          },
          "saude": {
            "$ref": "#/components/schemas/models.Saude"
          }
        }
      },
      "models.ClinicAddress": {
        "type": "object",
        "properties": {
          "bairro": {
            "type": "string"
          },
          "cidade": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          }
        }
      },
      "models.ClinicaFamilia": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "endereco": {
            "type": "string"
          },
          "fonte": {
            "description": "\"bigquery\" or \"mcp\" - not stored in DB, populated at response time",
            "type": "string"
          },
          "horario_atendimento": {
            "type": "string"
          },
          "id_cnes": {
            "type": "string"
          },
          "indicador": {
            "type": "boolean"
          },
          "nome": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          }
        }
      },
      "models.CompanySize": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "models.Documentos": {
        "type": "object",
        "properties": {
          "cns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "models.Educacao": {
        "type": "object",
        "properties": {
          "aluno": {
            "$ref": "#/components/schemas/models.Aluno"
          },
          "escola": {
            "$ref": "#/components/schemas/models.Escola"
          }
        }
      },
      "models.Email": {
        "type": "object",
        "properties": {
          "alternativo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.EmailAlternativo"
            }
          },
          "indicador": {
            "type": "boolean"
          },
          "principal": {
            "$ref": "#/components/schemas/models.EmailPrincipal"
          }
        }
      },
      "models.EmailAlternativo": {
        "type": "object",
        "properties": {
          "origem": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.EmailPrincipal": {
        "type": "object",
        "properties": {
          "origem": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.Endereco": {
        "type": "object",
        "properties": {
          "alternativo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.EnderecoAlternativo"
            }
          },
          "indicador": {
            "type": "boolean"
          },
          "principal": {
            "$ref": "#/components/schemas/models.EnderecoPrincipal"
          }
        }
      },
      "models.EnderecoAlternativo": {
        "type": "object",
        "properties": {
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "municipio": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "pluscode": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "tipo_logradouro": {
            "type": "string"
          }
        }
      },
      "models.EnderecoPrincipal": {
        "type": "object",
        "properties": {
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "municipio": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "tipo_logradouro": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "models.EquipeSaudeFamilia": {
        "type": "object",
        "properties": {
          "enfermeiros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.ProfissionalSaude"
            }
          },
          "id_ine": {
            "type": "string"
          },
          "indicador": {
            "type": "boolean"
          },
          "medicos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.ProfissionalSaude"
            }
          },
          "nome": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          }
        }
      },
      "models.Escola": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "endereco": {
            "type": "string"
          },
          "horario_funcionamento": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          }
        }
      },
      "models.FederativeEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tipo": {
            "type": "string"
          }
        }
      },
      "models.HeadquartersBranch": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "models.LegalEntity": {
        "type": "object",
        "properties": {
          "_id": {},
          "capital_social": {
            "type": "number"
          },
          "cnae_fiscal": {
            "type": "string"
          },
          "cnae_secundarias": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cnpj": {
            "type": "string"
          },
          "contador": {
            "$ref": "#/components/schemas/models.Accountant"
          },
          "contato": {
            "$ref": "#/components/schemas/models.LegalEntityContact"
          },
          "endereco": {
            "$ref": "#/components/schemas/models.LegalEntityAddress"
          },
          "ente_federativo": {
            "$ref": "#/components/schemas/models.FederativeEntity"
          },
          "formas_atuacao": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inicio_atividade_data": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "matriz_filial": {
            "$ref": "#/components/schemas/models.HeadquartersBranch"
          },
          "natureza_juridica": {
            "$ref": "#/components/schemas/models.LegalNature"
          },
          "nire": {
            "type": "string"
          },
          "nome_fantasia": {
            "type": "string"
          },
          "orgao_registro": {
            "$ref": "#/components/schemas/models.RegistrationAuthority"
          },
          "porte": {
            "$ref": "#/components/schemas/models.CompanySize"
          },
          "razao_social": {
            "type": "string"
          },
          "responsavel": {
            "$ref": "#/components/schemas/models.ResponsiblePerson"
          },
          "situacao_cadastral": {
            "$ref": "#/components/schemas/models.RegistrationStatus"
          },
          "situacao_especial": {
            "$ref": "#/components/schemas/models.SpecialStatus"
          },
          "socios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.Partner"
            }
          },
          "socios_quantidade": {
            "type": "integer"
          },
          "sucessoes": {
            "type": "array",
            "items": {}
          },
          "tipos_unidade": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "models.LegalEntityAddress": {
        "type": "object",
        "properties": {
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "id_municipio": {
            "type": "string"
          },
          "id_pais": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "municipio_exterior_nome": {
            "type": "string"
          },
          "municipio_nome": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "tipo_logradouro": {
            "type": "string"
          },
          "uf": {
            "type": "string"
          }
        }
      },
      "models.LegalEntityContact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "telefone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.LegalEntityPhone"
            }
          }
        }
      },
      "models.LegalEntityPhone": {
        "type": "object",
        "properties": {
          "ddd": {
            "type": "string"
          },
          "telefone": {
            "type": "string"
          }
        }
      },
      "models.LegalNature": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "models.Mae": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          }
        }
      },
      "models.MaintenanceRequest": {
        "type": "object",
        "properties": {
          "categoria": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "data_alvo_diagnostico": {
            "type": "string"
          },
          "data_alvo_finalizacao": {
            "type": "string"
          },
          "data_fim": {
            "type": "string"
          },
          "data_inicio": {
            "type": "string"
          },
          "data_real_diagnostico": {
            "type": "string"
          },
          "dentro_prazo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "endereco": {
            "description": "Human-readable address, built on demand",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "id_bairro": {
            "type": "string"
          },
          "id_chamado": {
            "type": "string"
          },
          "id_logradouro": {
            "type": "string"
          },
          "id_origem_ocorrencia": {
            "type": "string"
          },
          "id_subtipo": {
            "type": "string"
          },
          "id_territorialidade": {
            "type": "string"
          },
          "id_tipo": {
            "type": "string"
          },
          "id_unidade_organizacional": {
            "type": "string"
          },
          "id_unidade_organizacional_mae": {
            "type": "string"
          },
          "indicador": {
            "type": "boolean"
          },
          "justificativa_status": {},
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "nome_unidade_organizacional": {
            "type": "string"
          },
          "numero_logradouro": {
            "type": "integer"
          },
          "origem_ocorrencia": {
            "type": "string"
          },
          "prazo_tipo": {
            "type": "string"
          },
          "prazo_unidade": {
            "type": "string"
          },
          "reclamacoes": {
            "type": "integer"
          },
          "situacao": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subtipo": {
            "type": "string"
          },
          "tempo_prazo": {},
          "tipo": {
            "type": "string"
          },
          "tipo_situacao": {
            "type": "string"
          },
          "total_chamados": {
            "type": "integer"
          },
          "total_fechados": {
            "type": "integer"
          },
          "unidade_organizacional_ouvidoria": {
            "type": "string"
          }
        }
      },
      "models.Nascimento": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "municipio": {
            "type": "string"
          },
          "municipio_id": {
            "type": "string"
          },
          "pais": {
            "type": "string"
          },
          "pais_id": {
            "type": "string"
          },
          "uf": {
            "type": "string"
          }
        }
      },
      "models.Obito": {
        "type": "object",
        "properties": {
          "ano": {
            "type": "integer"
          },
          "indicador": {
            "type": "boolean"
          }
        }
      },
      "models.OptInRequest": {
        "type": "object",
        "required": [
          "channel",
          "cpf"
        ],
        "properties": {
          "channel": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "validation_result": {
            "$ref": "#/components/schemas/models.ValidationResult"
          }
        }
      },
      "models.OptInResponse": {
        "type": "object",
        "properties": {
          "phone_mapping_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "models.OptOutRequest": {
        "type": "object",
        "required": [
          "channel",
          "reason"
        ],
        "properties": {
          "channel": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "models.OptOutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "models.PaginatedLegalEntities": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.LegalEntity"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "models.PaginatedMaintenanceRequests": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.MaintenanceRequest"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "models.PaginatedPets": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.Pet"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "total_pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "models.PaginationInfo": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          }
        }
      },
      "models.Partner": {
        "type": "object",
        "properties": {
          "cnpj_socio": {
            "type": "string"
          },
          "codigo_pais": {
            "type": "string"
          },
          "cpf_representante_legal": {
            "type": "string"
          },
          "cpf_socio": {
            "type": "string"
          },
          "data_situacao_especial": {
            "type": "string"
          },
          "nome_socio_estrangeiro": {
            "type": "string"
          },
          "qualificacao_representante_legal": {
            "type": "string"
          },
          "qualificacao_socio": {
            "type": "string"
          },
          "tipo": {
            "type": "string"
          }
        }
      },
      "models.Pet": {
        "type": "object",
        "properties": {
          "animal_nome": {
            "type": "string"
          },
          "antirrabica_data": {
            "type": "string"
          },
          "antirrabica_validade_data": {
            "type": "string"
          },
          "especie_nome": {
            "type": "string"
          },
          "fase_vida_nome": {
            "type": "string"
          },
          "foto_url": {
            "type": "string"
          },
          "id_animal": {
            "type": "integer"
          },
          "indicador": {
            "type": "boolean"
          },
          "indicador_ativo": {
            "type": "boolean"
          },
          "indicador_castrado": {
            "type": "boolean"
          },
          "microchip_numero": {
            "type": "string"
          },
          "nascimento_data": {
            "type": "string"
          },
          "pedigree_indicador": {
            "type": "boolean"
          },
          "pedigree_origem_nome": {
            "type": "string"
          },
          "porte_nome": {
            "type": "string"
          },
          "qrcode_payload": {
            "type": "string"
          },
          "raca_nome": {
            "type": "string"
          },
          "registro_data": {
            "type": "string"
          },
          "sexo_sigla": {
            "type": "string"
          },
          "vermifugacao_data": {
            "type": "string"
          },
          "vermifugacao_validade_data": {
            "type": "string"
          }
        }
      },
      "models.PetClinicResponse": {
        "type": "object",
        "properties": {
          "clinic": {
            "$ref": "#/components/schemas/models.AccreditedClinic"
          },
          "cpf": {
            "type": "string"
          }
        }
      },
      "models.PetStatsResponse": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "statistics": {
            "$ref": "#/components/schemas/models.Statistics"
          }
        }
      },
      "models.PhoneCitizenResponse": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "found": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "models.PhoneStatusResponse": {
        "type": "object",
        "properties": {
          "beta_group_id": {
            "type": "string"
          },
          "beta_group_name": {
            "type": "string"
          },
          "beta_whitelisted": {
            "type": "boolean"
          },
          "cpf": {
            "type": "string"
          },
          "found": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "opted_out": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "quarantine_until": {
            "type": "string"
          },
          "quarantined": {
            "type": "boolean"
          }
        }
      },
      "models.PhoneVerificationValidateRequest": {
        "type": "object",
        "required": [
          "code",
          "ddd",
          "ddi",
          "valor"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "ddd": {
            "type": "string"
          },
          "ddi": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.ProfissionalSaude": {
        "type": "object",
        "properties": {
          "id_profissional_sus": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          }
        }
      },
      "models.QuarantineResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "quarantine_until": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "models.QuarantineStats": {
        "type": "object",
        "properties": {
          "active_quarantines": {
            "type": "integer"
          },
          "expired_quarantines": {
            "type": "integer"
          },
          "quarantine_history_total": {
            "type": "integer"
          },
          "quarantines_with_cpf": {
            "type": "integer"
          },
          "quarantines_without_cpf": {
            "type": "integer"
          },
          "total_quarantined": {
            "type": "integer"
          }
        }
      },
      "models.QuarantinedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.QuarantinedPhone"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/models.PaginationInfo"
          }
        }
      },
      "models.QuarantinedPhone": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "quarantine_until": {
            "type": "string"
          }
        }
      },
      "models.RegistrationAuthority": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "models.RegistrationStatus": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "motivo_descricao": {
            "type": "string"
          },
          "motivo_id": {
            "type": "string"
          }
        }
      },
      "models.RejectRegistrationRequest": {
        "type": "object",
        "required": [
          "channel",
          "cpf",
          "reason"
        ],
        "properties": {
          "channel": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "models.RejectRegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "models.ResponsiblePerson": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "inclusao_data": {
            "type": "string"
          },
          "qualificacao_descricao": {
            "type": "string"
          },
          "qualificacao_id": {
            "type": "string"
          }
        }
      },
      "models.Saude": {
        "type": "object",
        "properties": {
          "clinica_familia": {
            "$ref": "#/components/schemas/models.ClinicaFamilia"
          },
          "equipe_saude_familia": {
            "$ref": "#/components/schemas/models.EquipeSaudeFamilia"
          }
        }
      },
      "models.SelfDeclaredAddressInput": {
        "type": "object",
        "required": [
          "bairro",
          "cep",
          "estado",
          "logradouro",
          "municipio",
          "numero"
        ],
        "properties": {
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "municipio": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "tipo_logradouro": {
            "type": "string"
          }
        }
      },
      "models.SelfDeclaredEmailInput": {
        "type": "object",
        "required": [
          "valor"
        ],
        "properties": {
          "valor": {
            "type": "string"
          }
        }
      },
      "models.SelfDeclaredNomeExibicaoInput": {
        "type": "object",
        "required": [
          "valor"
        ],
        "properties": {
          "valor": {
            "type": "string"
          }
        }
      },
      "models.SelfDeclaredPhoneInput": {
        "type": "object",
        "required": [
          "ddi",
          "valor"
        ],
        "properties": {
          "ddd": {
            "description": "DDD é obrigatório somente quando o DDI é 55 (Brasil)",
            "type": "string"
          },
          "ddi": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.SelfDeclaredRacaInput": {
        "type": "object",
        "required": [
          "valor"
        ],
        "properties": {
          "valor": {
            "type": "string"
          }
        }
      },
      "models.SpecialStatus": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "models.Statistics": {
        "type": "object",
        "properties": {
          "quantidade_cachorro": {
            "type": "integer"
          },
          "quantidade_gato": {
            "type": "integer"
          },
          "quantidade_outro": {
            "type": "integer"
          }
        }
      },
      "models.Telefone": {
        "type": "object",
        "properties": {
          "alternativo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/models.TelefoneAlternativo"
            }
          },
          "indicador": {
            "type": "boolean"
          },
          "principal": {
            "$ref": "#/components/schemas/models.TelefonePrincipal"
          }
        }
      },
      "models.TelefoneAlternativo": {
        "type": "object",
        "properties": {
          "ddd": {
            "type": "string"
          },
          "ddi": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.TelefonePrincipal": {
        "type": "object",
        "properties": {
          "ddd": {
            "type": "string"
          },
          "ddi": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "sistema": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "valor": {
            "type": "string"
          }
        }
      },
      "models.UserAvatarRequest": {
        "type": "object",
        "properties": {
          "avatar_id": {
            "type": "string"
          }
        }
      },
      "models.UserAvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "$ref": "#/components/schemas/models.AvatarResponse"
          },
          "avatar_id": {
            "type": "string"
          }
        }
      },
      "models.UserConfigOptInResponse": {
        "type": "object",
        "properties": {
          "opt_in": {
            "type": "boolean"
          }
        }
      },
      "models.UserConfigResponse": {
        "type": "object",
        "properties": {
          "firstlogin": {
            "type": "boolean"
          }
        }
      },
      "models.ValidateRegistrationRequest": {
        "type": "object",
        "required": [
          "birth_date",
          "channel",
          "cpf",
          "name"
        ],
        "properties": {
          "birth_date": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "models.ValidateRegistrationResponse": {
        "type": "object",
        "properties": {
          "matched_cpf": {
            "type": "string"
          },
          "matched_name": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "models.ValidationResult": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
