basePath: /v1
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.HealthResponse:
    properties:
      services:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
      timestamp:
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.Citizen:
    properties:
      cpf:
        type: string
      cpf_particao:
        type: integer
      datalake:
        $ref: '#/definitions/models.Datalake'
      documentos:
        $ref: '#/definitions/models.Documentos'
      email:
        $ref: '#/definitions/models.Email'
      endereco:
        $ref: '#/definitions/models.Endereco'
      mae:
        $ref: '#/definitions/models.Mae'
      menor_idade:
        type: boolean
      nascimento:
        $ref: '#/definitions/models.Nascimento'
      nome:
        type: string
      nome_social:
        type: string
      obito:
        $ref: '#/definitions/models.Obito'
      raca:
        type: string
      row_number:
        type: integer
      saude:
        $ref: '#/definitions/models.Saude'
      sexo:
        type: string
      telefone:
        $ref: '#/definitions/models.Telefone'
    type: object
  models.ClinicaFamilia:
    properties:
      id_cnes:
        type: string
      indicador:
        type: boolean
      nome:
        type: string
      telefone:
        type: string
    type: object
  models.Datalake:
    properties:
      last_updated:
        type: string
    type: object
  models.Documentos:
    properties:
      cns:
        items:
          type: string
        type: array
    type: object
  models.Email:
    properties:
      alternativo:
        items:
          type: integer
        type: array
      indicador:
        type: boolean
      principal:
        $ref: '#/definitions/models.EmailPrincipal'
    type: object
  models.EmailPrincipal:
    properties:
      origem:
        type: string
      sistema:
        type: string
      valor:
        type: string
    type: object
  models.Endereco:
    properties:
      alternativo:
        items:
          type: integer
        type: array
      indicador:
        type: boolean
      principal:
        $ref: '#/definitions/models.EnderecoPrincipal'
    type: object
  models.EnderecoPrincipal:
    properties:
      bairro:
        type: string
      cep:
        type: string
      complemento:
        type: string
      estado:
        type: string
      logradouro:
        type: string
      municipio:
        type: string
      numero:
        type: string
      origem:
        type: string
      sistema:
        type: string
      tipo_logradouro:
        type: string
    type: object
  models.EquipeSaudeFamilia:
    properties:
      id_ine:
        type: string
      indicador:
        type: boolean
      nome:
        type: string
      telefone:
        type: string
    type: object
  models.Mae:
    properties:
      cpf:
        type: integer
      nome:
        type: string
    type: object
  models.Nascimento:
    properties:
      data:
        type: string
      municipio:
        type: string
      municipio_id:
        type: string
      pais:
        type: string
      pais_id:
        type: string
      uf:
        type: string
    type: object
  models.Obito:
    properties:
      ano:
        type: integer
      indicador:
        type: boolean
    type: object
  models.PhoneVerificationValidateRequest:
    properties:
      code:
        type: string
      ddd:
        type: string
      ddi:
        type: string
      valor:
        type: string
    required:
    - code
    - ddd
    - ddi
    - valor
    type: object
  models.Saude:
    properties:
      clinica_familia:
        $ref: '#/definitions/models.ClinicaFamilia'
      equipe_saude_familia:
        $ref: '#/definitions/models.EquipeSaudeFamilia'
    type: object
  models.SelfDeclaredAddressInput:
    properties:
      bairro:
        type: string
      cep:
        type: string
      complemento:
        type: string
      estado:
        type: string
      logradouro:
        type: string
      municipio:
        type: string
      numero:
        type: string
      tipo_logradouro:
        type: string
    required:
    - bairro
    - cep
    - estado
    - logradouro
    - municipio
    - numero
    type: object
  models.SelfDeclaredEmailInput:
    properties:
      valor:
        type: string
    required:
    - valor
    type: object
  models.SelfDeclaredPhoneInput:
    properties:
      ddd:
        type: string
      ddi:
        type: string
      valor:
        type: string
    required:
    - ddd
    - ddi
    - valor
    type: object
  models.Telefone:
    properties:
      alternativo:
        items:
          type: integer
        type: array
      indicador:
        type: boolean
      principal:
        $ref: '#/definitions/models.TelefonePrincipal'
    type: object
  models.TelefonePrincipal:
    properties:
      ddd:
        type: string
      ddi:
        type: string
      origem:
        type: string
      sistema:
        type: string
      valor:
        type: string
    type: object
  models.UserConfigOptInResponse:
    properties:
      optin:
        type: boolean
    type: object
  models.UserConfigResponse:
    properties:
      firstlogin:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing citizen data with self-declared information. This
    API provides endpoints for retrieving and updating citizen information, with support
    for caching and data validation. Self-declared data takes precedence over base
    data when available.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: RMI API
  version: "1.0"
paths:
  /citizen/{cpf}:
    get:
      consumes:
      - application/json
      description: Retrieves citizen data by CPF, combining base data with any self-declared
        updates. Self-declared data takes precedence over base data. Results are cached
        using Redis with configurable TTL.
      parameters:
      - description: Citizen CPF (11 digits)
        in: path
        maxLength: 11
        minLength: 11
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Complete citizen data
          schema:
            $ref: '#/definitions/models.Citizen'
        "400":
          description: Invalid CPF format
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Citizen not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get citizen data
      tags:
      - citizen
  /citizen/{cpf}/address:
    put:
      consumes:
      - application/json
      description: Updates or creates the self-declared address for a citizen by CPF.
        Only the address field is updated.
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      - description: Self-declared address
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SelfDeclaredAddressInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update self-declared address for a citizen
      tags:
      - citizen
  /citizen/{cpf}/email:
    put:
      consumes:
      - application/json
      description: Updates or creates the self-declared email for a citizen by CPF.
        Only the email field is updated.
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      - description: Self-declared email
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SelfDeclaredEmailInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update self-declared email for a citizen
      tags:
      - citizen
  /citizen/{cpf}/firstlogin:
    get:
      consumes:
      - application/json
      description: Checks if this is the user's first login
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get first login status
      tags:
      - citizen
    put:
      consumes:
      - application/json
      description: Sets the first login status to false for a user
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserConfigResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update first login status
      tags:
      - citizen
  /citizen/{cpf}/optin:
    get:
      consumes:
      - application/json
      description: Checks if the user has opted in for notifications
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserConfigOptInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get opt-in status
      tags:
      - citizen
    put:
      consumes:
      - application/json
      description: Updates the user's opt-in status for notifications
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      - description: Opt-in status
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserConfigOptInResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserConfigOptInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update opt-in status
      tags:
      - citizen
  /citizen/{cpf}/phone:
    put:
      consumes:
      - application/json
      description: Updates or creates the self-declared phone for a citizen by CPF.
        Only the phone field is updated (stored as pending until verified).
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      - description: Self-declared phone
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SelfDeclaredPhoneInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update self-declared phone for a citizen
      tags:
      - citizen
  /citizen/{cpf}/phone/validate:
    post:
      consumes:
      - application/json
      description: Validates the verification code sent to the phone number
      parameters:
      - description: CPF number
        in: path
        name: cpf
        required: true
        type: string
      - description: Verification code and phone
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.PhoneVerificationValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Validate phone verification
      tags:
      - citizen
  /health:
    get:
      description: Checks the health of the API and its dependencies (MongoDB and
        Redis). Returns detailed status for each service.
      produces:
      - application/json
      responses:
        "200":
          description: All services are healthy
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: One or more services are unhealthy
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Health check endpoint
      tags:
      - health
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Operations about citizens
  name: citizen
- description: Health check operations
  name: health
