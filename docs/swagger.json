{
    "swagger": "2.0",
    "info": {
        "description": "API for managing citizen data with self-declared information. This API provides endpoints for retrieving and updating citizen information, with support for caching and data validation. Self-declared data takes precedence over base data when available.",
        "title": "RMI API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/citizen/{cpf}": {
            "get": {
                "description": "Retrieves citizen data by CPF, combining base data with any self-declared updates. Self-declared data takes precedence over base data. Results are cached using Redis with configurable TTL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "citizen"
                ],
                "summary": "Get citizen data",
                "parameters": [
                    {
                        "maxLength": 11,
                        "minLength": 11,
                        "type": "string",
                        "description": "Citizen CPF (11 digits)",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complete citizen data",
                        "schema": {
                            "$ref": "#/definitions/models.Citizen"
                        }
                    },
                    "400": {
                        "description": "Invalid CPF format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Citizen not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/citizen/{cpf}/self-declared": {
            "put": {
                "description": "Updates or creates self-declared information for a citizen. Only specific fields (address and contact) can be updated. All fields are optional, and only provided fields will be updated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "citizen"
                ],
                "summary": "Update self-declared data",
                "parameters": [
                    {
                        "maxLength": 11,
                        "minLength": 11,
                        "type": "string",
                        "description": "Citizen CPF (11 digits)",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CadastroUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data updated successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation errors",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Checks the health of the API and its dependencies (MongoDB and Redis). Returns detailed status for each service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "All services are healthy",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "One or more services are unhealthy",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.CadastroUpdate": {
            "type": "object",
            "properties": {
                "contato": {
                    "description": "Contact information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ContatoUpdate"
                        }
                    ]
                },
                "endereco": {
                    "description": "Address information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.EnderecoUpdate"
                        }
                    ]
                }
            }
        },
        "models.Citizen": {
            "type": "object",
            "properties": {
                "contato": {
                    "$ref": "#/definitions/models.Contato"
                },
                "cpf": {
                    "type": "string"
                },
                "endereco": {
                    "$ref": "#/definitions/models.Endereco"
                },
                "fazenda": {
                    "$ref": "#/definitions/models.Fazenda"
                },
                "nome": {
                    "type": "string"
                },
                "origens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Origens"
                    }
                },
                "profissional": {
                    "$ref": "#/definitions/models.Profissional"
                },
                "saude": {
                    "$ref": "#/definitions/models.Saude"
                }
            }
        },
        "models.ClinicaFamilia": {
            "type": "object",
            "properties": {
                "ap": {
                    "type": "string"
                },
                "cap": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "endereco": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "models.Contato": {
            "type": "object",
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Email"
                    }
                },
                "telefones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Telefone"
                    }
                }
            }
        },
        "models.ContatoUpdate": {
            "type": "object",
            "properties": {
                "emails": {
                    "description": "List of email addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmailUpdate"
                    }
                },
                "telefones": {
                    "description": "List of phone numbers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TelefoneUpdate"
                    }
                }
            }
        },
        "models.Email": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "observacoes": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "models.EmailUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Valid email address\nexample: \"user@example.com\"",
                    "type": "string"
                },
                "observacoes": {
                    "description": "Optional notes about the email\nexample: \"Email principal\"\nmax: 200",
                    "type": "string",
                    "maxLength": 200
                },
                "tipo": {
                    "description": "Email type must be one of: PESSOAL, COMERCIAL\nexample: \"PESSOAL\"\nenum: PESSOAL,COMERCIAL",
                    "type": "string",
                    "enum": [
                        "PESSOAL",
                        "COMERCIAL"
                    ]
                }
            }
        },
        "models.Endereco": {
            "type": "object",
            "properties": {
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "codigo_ibge": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "tipo_endereco": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                }
            }
        },
        "models.EnderecoUpdate": {
            "type": "object",
            "properties": {
                "bairro": {
                    "description": "Neighborhood\nexample: \"Centro\"\nmin: 3 max: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "cep": {
                    "description": "ZIP code (8 digits)\nexample: \"20000000\"\nmin: 8 max: 8",
                    "type": "string"
                },
                "cidade": {
                    "description": "City name\nexample: \"Rio de Janeiro\"\nmin: 3 max: 100",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "complemento": {
                    "description": "Additional address information\nexample: \"Apto 101\"\nmax: 100",
                    "type": "string",
                    "maxLength": 100
                },
                "logradouro": {
                    "description": "Street name\nexample: \"Rua das Flores\"\nmin: 3 max: 200",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 3
                },
                "numero": {
                    "description": "Street number\nexample: \"123\"\nmax: 10",
                    "type": "string",
                    "maxLength": 10
                },
                "tipo_endereco": {
                    "description": "Address type must be one of: RESIDENCIAL, COMERCIAL\nexample: \"RESIDENCIAL\"\nenum: RESIDENCIAL,COMERCIAL",
                    "type": "string",
                    "enum": [
                        "RESIDENCIAL",
                        "COMERCIAL"
                    ]
                },
                "uf": {
                    "description": "State abbreviation (2 letters)\nexample: \"RJ\"\nmin: 2 max: 2",
                    "type": "string"
                }
            }
        },
        "models.EquipeSaudeFamilia": {
            "type": "object",
            "properties": {
                "agente_vinculo": {
                    "type": "string"
                },
                "area_atuacao": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "microarea": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                }
            }
        },
        "models.Fazenda": {
            "type": "object",
            "properties": {
                "inscricao_estadual": {
                    "type": "string"
                },
                "nome_fazenda": {
                    "type": "string"
                }
            }
        },
        "models.Origens": {
            "type": "object",
            "properties": {
                "data_origem": {
                    "type": "string"
                },
                "origem": {
                    "type": "string"
                }
            }
        },
        "models.Profissional": {
            "type": "object",
            "properties": {
                "cargo": {
                    "type": "string"
                },
                "data_admissao": {
                    "type": "string"
                },
                "empresa": {
                    "type": "string"
                },
                "profissao": {
                    "type": "string"
                }
            }
        },
        "models.Saude": {
            "type": "object",
            "properties": {
                "clinica_familia": {
                    "$ref": "#/definitions/models.ClinicaFamilia"
                },
                "equipe_saude_familia": {
                    "$ref": "#/definitions/models.EquipeSaudeFamilia"
                },
                "numero_cartao_sus": {
                    "type": "string"
                }
            }
        },
        "models.Telefone": {
            "type": "object",
            "properties": {
                "ddd": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "observacoes": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                }
            }
        },
        "models.TelefoneUpdate": {
            "type": "object",
            "properties": {
                "ddd": {
                    "description": "DDD (area code) must be exactly 2 digits\nexample: \"21\"\nmin: 2 max: 2",
                    "type": "string"
                },
                "numero": {
                    "description": "Phone number must be 8 or 9 digits\nexample: \"999887766\"\nmin: 8 max: 9",
                    "type": "string",
                    "maxLength": 9,
                    "minLength": 8
                },
                "observacoes": {
                    "description": "Optional notes about the phone number\nexample: \"Horário comercial\"\nmax: 200",
                    "type": "string",
                    "maxLength": 200
                },
                "tipo": {
                    "description": "Phone type must be one of: RESIDENCIAL, COMERCIAL, CELULAR\nexample: \"CELULAR\"\nenum: RESIDENCIAL,COMERCIAL,CELULAR",
                    "type": "string",
                    "enum": [
                        "RESIDENCIAL",
                        "COMERCIAL",
                        "CELULAR"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Operations about citizens",
            "name": "citizen"
        },
        {
            "description": "Health check operations",
            "name": "health"
        }
    ]
}